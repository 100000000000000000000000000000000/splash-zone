local player = game:GetService("Players").LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
wait(1)
local backpack = player.Backpack
-- Check if the Remington exists in the backpack
local remington = backpack:FindFirstChild("Remington 870")
if remington then
    -- Rename the Remington to "Remi"
    remington.Name = "Remi"
    print("Renamed 'Remington 870' to 'Remi'.")
else
    print("Remington 870 is not found in the backpack.")
    return -- Exit if Remington is not found, no further actions are necessary
end
-- Function to delete the specified items from the backpack
local function deleteTools()
    -- Check if the tool named "Remi" exists in the backpack
    local remi = backpack:FindFirstChild("Remi")
    if remi then
        -- Attempt to find and delete ToolScript
        local toolScript = remi:FindFirstChild("ToolScript")
        if toolScript then
            toolScript:Destroy()  -- This deletes ToolScript
            print("Deleted ToolScript from Remi")
        else
            print("ToolScript not found in Remi")
        end
        
        -- Attempt to find and delete ToolScriptLocal
        local toolScriptLocal = remi:FindFirstChild("ToolScriptLocal")
        if toolScriptLocal then
            toolScriptLocal:Destroy()  -- This deletes ToolScriptLocal
            print("Deleted ToolScriptLocal from Remi")
        else
            print("ToolScriptLocal not found in Remi")
        end
        -- Attempt to find and delete qPerfectionWeld
        local qPerfectionWeld = remi:FindFirstChild("qPerfectionWeld")
        if qPerfectionWeld then
            qPerfectionWeld:Destroy()  -- This deletes qPerfectionWeld
            print("Deleted qPerfectionWeld from Remi")
        else
            print("qPerfectionWeld not found in Remi")
        end
    else
        print("Remi is not found in the backpack")
    end
end
-- Call the function to delete the tools after renaming
deleteTools()
-- Unequip all tools
player.Character.Humanoid:UnequipTools()
local char = player.Character
local Tools = backpack:GetChildren()
-- Find the tool named "Remi"
local specificTool = nil
for _, tool in ipairs(Tools) do
    if tool:IsA("Tool") and tool.Name == "Remi" then
        specificTool = tool
        break
    end
end
-- Check if the tool was found and set its grip and parent accordingly
if specificTool then
    -- Set grips for the tool
    local sin = math.sin
    local cos = math.cos
    local rd = math.rad
    local cf = {a=CFrame.Angles, n=CFrame.new}
    
    specificTool.Grip = cf.n(0.1, 0.2, 0.6) * cf.a(rd(-80), rd(0), rd(0))
    specificTool.Parent = char
else
    warn("Tool 'Remi' not found in Backpack.")
    return
end
-- Animation details
local AnimationId1 = "2145789039" -- First animation ID
-- Variable to hold the animation track
local animationTrack1
-- Function to play the first animation when the tool is equipped
local function playAnimation()
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if humanoid then
        local anim1 = Instance.new("Animation")
        anim1.AnimationId = "rbxassetid://"..AnimationId1
        
        if animationTrack1 then
            -- Stop the first animation if it's already playing
            animationTrack1:Stop()
        end
        animationTrack1 = humanoid:LoadAnimation(anim1)
        animationTrack1:Play()
        animationTrack1:AdjustSpeed(0.8) 
        
        -- Wait for a few seconds before changing the speed
        wait(0.32) 
        
        -- Change the animation speed after the wait
        animationTrack1:AdjustSpeed(0)
    end
end
-- Function to stop the first animation
local function stopAnimation()
    if animationTrack1 then
        animationTrack1:Stop()
    end
end
-- Connect the tool's Equipped and Unequipped events
specificTool.Equipped:Connect(playAnimation) -- Play animation when equipped
specificTool.Unequipped:Connect(stopAnimation) -- Stop animation when unequipped

